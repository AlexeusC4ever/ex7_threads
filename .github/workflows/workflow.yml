name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  ##the next line creates the global variable "global_env" and initializes it with word "global"
env:
  global_env: global

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "sys_info"(name of job)
  sys_info:
    runs-on: ubuntu-latest
    ##This expression creates the local variable "local_env" and initializes it with 
    ##the global variable of step name GITHUB_JOB
    env:
      local_env: job
      
    steps:
      - name: check tools
        run: g++ -v
          
          
  build:
    needs: [sys_info]
    runs-on: ubuntu-latest
#     env:
#       local_env: ImageOS
    steps:
      ##we need the next expression to download the latest version of our repository
      - uses: actions/checkout@v2
      - name: build
        run: |
          g++ hello.cpp -o app_${RUNNER_OS}_ver.${GITHUB_RUN_NUMBER}
          ls -la
          ./app_${RUNNER_OS}_ver.${GITHUB_RUN_NUMBER}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: my_app
          path: app_**
          
          
        
    
      #print enviroment variables available in the current workspace
#       - name: build
#         run: |
#           sleep 15
#           echo "test build" >> build.txt
        
#   test:
#     runs-on: ubuntu-latest
#     #in the next expression we tell job "test" execute after step build
#     needs: [build, sys_info]
#     steps:
#       - name: run_test
#         run: sleep 20
